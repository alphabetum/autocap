upstream monit_<%= application %>_<%= stage %> {
  server 127.0.0.1:2812;
}

# the server directive is nginx's virtual host directive.
server {
  
  
  # port to listen on. Can also be set to an IP:PORT
  listen       80;
  
  # sets the domain[s] that this vhost server requests for
  server_name  monit.<%= domain %>;
  
  
  # doc root
  # root ?;
  
  # vhost specific access log
  access_log  /var/log/nginx/monit_<%= application %>_<%= stage %>.access.log  main;
  
  #Set the max size for file uploads to 50Mb
  client_max_body_size  50M;
  
  # this rewrites all the requests to the maintenance.html
  # page if it exists in the doc root. This is for capistrano's
  # disable web task
  if (-f $document_root/maintenance.html){
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }
  
  location / {
    
    
    # needed to forward user's IP address to rails
    proxy_set_header  X-Real-IP  $remote_addr;
    
    # needed for HTTPS
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect false;
    proxy_max_temp_file_size 0;
    
    # check for index.html for directory index
    # if its there on the filesystem then rewite 
    # the url to add /index.html to the end of it
    # and then break to send it to the next config rules.
    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }
    
    # this is the meat of the rails page caching config
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewite the url to have explicit .html on the end 
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the 
    # necessary headers and proxies to our upstream mongrels
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }
    
    if (!-f $request_filename) {
      proxy_pass http://monit_<%= application %>_<%= stage %>;
      break;
    }
  }
  
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   html;
  }
}